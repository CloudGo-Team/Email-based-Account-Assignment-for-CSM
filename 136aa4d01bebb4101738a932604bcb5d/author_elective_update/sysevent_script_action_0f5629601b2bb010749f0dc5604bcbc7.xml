<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_script_action">
    <sysevent_script_action action="DELETE">
        <active>false</active>
        <condition_script>current.isValidRecord()</condition_script>
        <description/>
        <event_name>x_clgp_mail_to_acc.email_processing</event_name>
        <name>Apply Account for email-based Cases</name>
        <order>100</order>
        <script><![CDATA[function taskToDoWhenEmailProcessed(emailGr) {
	var caseGr = new GlideRecord('sn_customerservice_case');
	caseGr.addNullQuery('account');
	caseGr.addQuery('sys_created_on', '>=', emailGr.sys_created_on);
	caseGr.addQuery('sys_id', current.instance);
	caseGr.setLimit(1);
	caseGr.query();
	caseGr.next();

	// Do nothing if there's no case to act on
	if (!caseGr.isValidRecord()) return;
	
	var domainAccountId = getAccountIdFromEmail(getEmailFromEmailUser(emailGr.user));

    // Don't do anything if the account ID could not be ascertained
    if (!domainAccountId) return;

    // Set the Case account based on the sender's email domain
    caseGr.account = domainAccountId;
    caseGr.autoSysFields(false);
    caseGr.update();
}

// This is the event loop logic. It keeps the chain going until a timeout or email is processed
(function(current, event) {
    var now = new GlideDateTime();
    var pollingStarted = event.parm1 ? new GlideDateTime(event.parm1) : now;

    // Abort if the polling start value is invalid
    if (pollingStarted.getErrorMsg()) throw new Error(
        '"Apply Account for email-based Cases" Script Action failed due to bad parm1: ' + event.parm1
    );

    if (current.state == 'processed') {
		// The email has finished processing. Time to do what we came here to do...
		taskToDoWhenEmailProcessed(current);
    } else if (current.state != 'error' && current.state != 'ignored'){
		// Check if we need to timeout
        var pollInterval = getPositiveIntegerProperty('x_clgp_mail_to_acc.email_processing.max_wait', 500);
        var pollMax = getPositiveIntegerProperty('x_clgp_mail_to_acc.email_processing.polling_interval', 5000);
        var pollingDuration = now.getNumericValue() - pollingStarted.getNumericValue();

        if (pollingDuration > pollMax) {
            // Abort due to timeout
            gs.warn('"Apply Account for email-based Cases" Script Action timed out waiting for email to process: ' + current);
        } else {
			// Schedule the next polling interval
            var nextPoll = new GlideDateTime();
            nextPoll.setNumericValue(now.getNumericValue() + pollInterval);

            // Replay this event with the same arguments one polling interval from now
            gs.eventQueueScheduled(
                'x_clgp_mail_to_acc.email_processing',
                current,
                pollingStarted.toString(),
				null,
                nextPoll
            );
        }
    }
})(current, event);]]></script>
        <synchronous>false</synchronous>
        <sys_class_name>sysevent_script_action</sys_class_name>
        <sys_created_by>Chris.Crockett@CloudGoServices.com</sys_created_by>
        <sys_created_on>2021-10-28 22:39:36</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0f5629601b2bb010749f0dc5604bcbc7</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>Apply Account for email-based Cases</sys_name>
        <sys_overrides/>
        <sys_package display_value="Email-based Account Assignment for CSM" source="x_clgp_mail_to_acc">136aa4d01bebb4101738a932604bcb5d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Email-based Account Assignment for CSM">136aa4d01bebb4101738a932604bcb5d</sys_scope>
        <sys_update_name>sysevent_script_action_0f5629601b2bb010749f0dc5604bcbc7</sys_update_name>
        <sys_updated_by>Chris.Crockett@CloudGoServices.com</sys_updated_by>
        <sys_updated_on>2021-10-29 17:52:04</sys_updated_on>
    </sysevent_script_action>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Email-based Account Assignment for CSM">136aa4d01bebb4101738a932604bcb5d</application>
        <file_path/>
        <instance_id>c0da2877db3eec102f68c597059619f7</instance_id>
        <instance_name>ven04370</instance_name>
        <name>sysevent_script_action_0f5629601b2bb010749f0dc5604bcbc7</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sysevent_script_action"&gt;&lt;sysevent_script_action action="INSERT_OR_UPDATE"&gt;&lt;active&gt;false&lt;/active&gt;&lt;condition_script&gt;current.isValidRecord()&lt;/condition_script&gt;&lt;description/&gt;&lt;event_name&gt;x_clgp_mail_to_acc.email_processing&lt;/event_name&gt;&lt;name&gt;Apply Account for email-based Cases&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;script&gt;&lt;![CDATA[function taskToDoWhenEmailProcessed(emailGr) {
	var caseGr = new GlideRecord('sn_customerservice_case');
	caseGr.addNullQuery('account');
	caseGr.addQuery('sys_created_on', '&gt;=', emailGr.sys_created_on);
	caseGr.addQuery('sys_id', current.instance);
	caseGr.setLimit(1);
	caseGr.query();
	caseGr.next();

	// Do nothing if there's no case to act on
	if (!caseGr.isValidRecord()) return;
	
	var domainAccountId = getAccountIdFromEmail(getEmailFromEmailUser(emailGr.user));

    // Don't do anything if the account ID could not be ascertained
    if (!domainAccountId) return;

    // Set the Case account based on the sender's email domain
    caseGr.account = domainAccountId;
    caseGr.autoSysFields(false);
    caseGr.update();
}

// This is the event loop logic. It keeps the chain going until a timeout or email is processed
(function(current, event) {
    var now = new GlideDateTime();
    var pollingStarted = event.parm1 ? new GlideDateTime(event.parm1) : now;

    // Abort if the polling start value is invalid
    if (pollingStarted.getErrorMsg()) throw new Error(
        '"Apply Account for email-based Cases" Script Action failed due to bad parm1: ' + event.parm1
    );

    if (current.state == 'processed') {
		// The email has finished processing. Time to do what we came here to do...
		taskToDoWhenEmailProcessed(current);
    } else if (current.state != 'error' &amp;&amp; current.state != 'ignored'){
		// Check if we need to timeout
        var pollInterval = getPositiveIntegerProperty('x_clgp_mail_to_acc.email_processing.max_wait', 500);
        var pollMax = getPositiveIntegerProperty('x_clgp_mail_to_acc.email_processing.polling_interval', 5000);
        var pollingDuration = now.getNumericValue() - pollingStarted.getNumericValue();

        if (pollingDuration &gt; pollMax) {
            // Abort due to timeout
            gs.warn('"Apply Account for email-based Cases" Script Action timed out waiting for email to process: ' + current);
        } else {
			// Schedule the next polling interval
            var nextPoll = new GlideDateTime();
            nextPoll.setNumericValue(now.getNumericValue() + pollInterval);

            // Replay this event with the same arguments one polling interval from now
            gs.eventQueueScheduled(
                'x_clgp_mail_to_acc.email_processing',
                current,
                pollingStarted.toString(),
				null,
                nextPoll
            );
        }
    }
})(current, event);]]&gt;&lt;/script&gt;&lt;synchronous&gt;false&lt;/synchronous&gt;&lt;sys_class_name&gt;sysevent_script_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Chris.Crockett@CloudGoServices.com&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2021-10-28 22:39:36&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;0f5629601b2bb010749f0dc5604bcbc7&lt;/sys_id&gt;&lt;sys_mod_count&gt;14&lt;/sys_mod_count&gt;&lt;sys_name&gt;Apply Account for email-based Cases&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Email-based Account Assignment for CSM" source="x_clgp_mail_to_acc"&gt;136aa4d01bebb4101738a932604bcb5d&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Email-based Account Assignment for CSM"&gt;136aa4d01bebb4101738a932604bcb5d&lt;/sys_scope&gt;&lt;sys_update_name&gt;sysevent_script_action_0f5629601b2bb010749f0dc5604bcbc7&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Chris.Crockett@CloudGoServices.com&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-10-29 17:52:04&lt;/sys_updated_on&gt;&lt;/sysevent_script_action&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-113909313</payload_hash>
        <record_name>Apply Account for email-based Cases</record_name>
        <reverted_from/>
        <source>136aa4d01bebb4101738a932604bcb60</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>Chris.Crockett@CloudGoServices.com</sys_created_by>
        <sys_created_on>2021-10-29 17:52:04</sys_created_on>
        <sys_id>d393523c1b27f010749f0dc5604bcbb3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>17ccd2e1ebf0000001</sys_recorded_at>
        <sys_updated_by>Chris.Crockett@CloudGoServices.com</sys_updated_by>
        <sys_updated_on>2021-10-29 17:52:04</sys_updated_on>
        <type>Script Action</type>
        <update_guid>5b93523cca27f01071bbc0f1a3ac88b2</update_guid>
        <update_guid_history>5b93523cca27f01071bbc0f1a3ac88b2:-113909313,32be96a86fabb010306b4ed85fbd303d:-971732384,164e1e28b7abb01014132d6b3addc620:-1993069443,fe2d9628b5abb01055aa4564dd676d62:182949294,0e1b96e4afabb01045ac5fddbfe409c9:1786863513,2e5a52a432abb01091f1f0801944ee81:-1106184953,0f2a52a42fabb0106ba53676b6f8999c:786182742,aa281e2449abb010cf3988b698d7303d:-329059892,3156d2e0b6abb01016514d93f50a3c69:-1058470723,dd8512e0d3abb010edb515c958ad7884:-1834160723,c5d416a0b0abb010963b6868ff17a4fa:1602639866,99a416a045abb0103b7060f159b905f5:1526071041,4db3d66099abb010180fb55032ed93c9:-1296235406,80c1deecc46bb010d7b79fbe1ac3a08b:1859998413,a1db4ae46a6bb010f415c11897257894:334664573</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>Chris.Crockett@CloudGoServices.com</sys_created_by>
        <sys_created_on>2021-10-29 17:55:38</sys_created_on>
        <sys_db_object display_value="" name="sysevent_script_action">sysevent_script_action</sys_db_object>
        <sys_id>1925895d2d7848e7a65d6a2fa90cba69</sys_id>
        <sys_metadata>0f5629601b2bb010749f0dc5604bcbc7</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Apply Account for email-based Cases</sys_name>
        <sys_package display_value="Email-based Account Assignment for CSM" source="x_clgp_mail_to_acc">136aa4d01bebb4101738a932604bcb5d</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Email-based Account Assignment for CSM">136aa4d01bebb4101738a932604bcb5d</sys_scope>
        <sys_scope_delete display_value="">a119ec4638234ae4af8627a6fa2375e9</sys_scope_delete>
        <sys_update_name>sysevent_script_action_0f5629601b2bb010749f0dc5604bcbc7</sys_update_name>
        <sys_update_version display_value="sysevent_script_action_0f5629601b2bb010749f0dc5604bcbc7">d393523c1b27f010749f0dc5604bcbb3</sys_update_version>
        <sys_updated_by>Chris.Crockett@CloudGoServices.com</sys_updated_by>
        <sys_updated_on>2021-10-29 17:55:38</sys_updated_on>
    </sys_metadata_delete>
</record_update>
